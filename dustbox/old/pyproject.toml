[tool.poetry]
name = "fact-check-okinawa-vote-cheating"
version = "0.1.0"
description = ""
authors = ["trump"]
license = "MIT"
readme = "README.rst"
packages = [{include = "src"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "^3.10"
pandera = {extras = ["io", "mypy", "strategies"], version = "^0.12.0"}
pandas-estat = "^0.3.3"
python-dotenv = "^0.21.0"
pydantic = "^1.10.2"
requests = "^2.28.1"
beautifulsoup4 = "^4.11.1"
nptyping = "^2.3.1"
xlrd = "^2.0.1"
wget = "^3.2"
structlog = "^22.1.0"
rich = "^12.6.0"
nox = "^2022.8.7"

[tool.poetry.group.dev.dependencies]
better-exceptions = "^0.3.3"
black = "^22.8.0"
coverage = {extras = ["toml"], version = ">=6.2"}
flake8 = "^5.0.4"
flake8-SQL = "^0.4.1"
flake8-aaa = "^0.12.2"
flake8-absolute-import = "^1.0.0.1"
flake8-annotations-complexity = "^0.0.7"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^22.9.23"
flake8-builtins = "^1.5.3"
flake8-class-attributes-order = "^0.1.3"
flake8-codes = "^0.2.2"
flake8-cognitive-complexity = "^0.1.0"
flake8-comments = "^0.1.2"
flake8-comprehensions = "^3.10.0"
flake8-docstrings = "^1.6.0"
flake8-executable = "^2.1.2"
flake8-functions = "^0.0.7"
flake8-functions-names = "^0.3.0"
flake8-isort = "^4.2.0"
flake8-json = "^21.7.0"
flake8-keyword-arguments = "^0.1.0"
flake8-pie = "^0.16.0"
flake8-pylint = "^0.1.3"
flake8-pytest = "^1.4"
flake8-pytest-style = "^1.6.0"
flake8-quotes = "^3.3.1"
flake8-return = "^1.1.3"
flake8-rst-docstrings = "^0.2.7"
flake8-secure-coding-standard = "^1.3.0"
flake8-simplify = "^0.19.3"
flake8-spellcheck = "^0.28.0"
flake8-string-format = "^0.3.0"
flake8-todos = "^0.1.5"
flake8-unused-arguments = "^0.0.11"
flake8-use-fstring = "^1.4"
flake8-variables-names = "^0.0.5"
flake8-warnings = "^0.3.0"
furo = "^2022.9.29"
isort = "^5.10.1"
jupyterlab = "^3.4.8"
mypy = "^0.982"
myst-parser = "^0.18.1"
pandas-vet = "^0.2.3"
pep8 = "^1.7.1"
pep8-naming = "^0.13.2"
pre-commit = "^2.20.0"
pyproject-flake8 = "^5.0.4.post1"
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-datadir = "^1.3.1"
pytest-mock = "^3.10.0"
pytest-monkeytype = "^1.1.0"
pytest-picked = "^0.4.6"
pytest-structlog = "^0.5"
pytest-sugar = "^0.9.5"
safety = "^2.3.1"
setuptools = "^65.4.1"
tox = "^3.26.0"
typeguard = "^2.13.3"
xdoctest = "^1.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
in-project = true

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
max-line-length = 88
max-complexity = 18
ignore = "E203,E266,W503,"
inline-quotes = "double"
multiline-quotes = "'''"
accept-encodings = "utf-8"
docstring_style = "google"
extend_exclude = ["venv"]
enable-extensions="G"

[tool.mypy]
check_untyped_defs = true
disallow-untyped-calls = true
disallow-untyped-defs = true
ignore_errors = false
ignore_missing_imports = true
namespace_packages = true
pretty = true
python_version = "3.10"
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = true
strict_optional = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = 'src'
filterwarnings = ["ignore::DeprecationWarning",]
enable-extensions = "G"
addopts = [
  "-v",
  "--flake8",
  "--mypy",
  "--pylint",
  "--yapf",
  "--strict-config",
  "--strict-markers",
  "--picked",
  "--cov=src",
  "--cov-branch",
  "--cov-report=html",
  "--cov-report=term",
  "--cov-report=xml",
  "--no-cov-on-fail",
  "--junitxml=report.xml",
]

[tool.pydocstyle]
convention = "google"
add_select = ["D204", "D400", "D401", "D404", "D413"]

[tool.coverage.run]
branch = true
source = ["pynguin", "tests"]
omit = ["tests/fixtures/*"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.html]
directory = "cov_html"

[tool.yapf]
based_on_style = "google"
column_limit = 100
allow_split_before_dict_value = false
dedent_closing_brackets = true
indent_dictionary_value = false

[tool.black]
line-length = 88
target_version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | venv
    | _build
    | build
    | dist
    | pynguin.egg-info
  )/
)
'''
