[tool.poetry]
name = "fact-check-okinawa-vote-cheating"
version = "0.0.0"
description = "Fact Check Okinawa Vote Cheating"
authors = ["fact_check_usa <hoge@gmail.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/todesking2/fact-check-okinawa-vote-cheating"
repository = "https://github.com/todesking2/fact-check-okinawa-vote-cheating"
documentation = "https://fact-check-okinawa-vote-cheating.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
]
packages = [
  { include = "src"}
]

[tool.poetry.urls]
Changelog = "https://github.com/todesking2/fact-check-okinawa-vote-cheating/releases"

[tool.poetry.dependencies]
python = "3.10.*"
click = ">=8.0.1"
pandera = {extras = ["io", "mypy", "strategies"], version = "^0.13.3"}
pandas-estat = "^0.3.3"
python-dotenv = "^0.21.0"
pydantic = "^1.10.2"
requests = "^2.28.1"
beautifulsoup4 = "^4.11.1"
nptyping = "^2.3.1"
xlrd = "^2.0.1"
wget = "^3.2"
structlog = "^22.1.0"
rich = "^12.6.0"
nox = "^2022.8.7"
tqdm = "^4.64.1"
better-exceptions = "^0.3.3"
openpyxl = "^3.0.10"
requests-mock = "^1.10.0"
neologdn = "^0.5.1"
odfpy = "^1.4.1"


[tool.poetry.dev-dependencies]
Pygments = ">=2.10.0"
bandit = "^1.7.4"
better-exceptions = "^0.3.3"
black = "^22.8.0"
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
doq = "^0.9.1"
flake8 = "^5.0.4"
flake8-SQL = "^0.4.1"
flake8-aaa = "^0.12.2"
flake8-absolute-import = "^1.0.0.1"
flake8-annotations-complexity = "^0.0.7"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^22.9.23"
flake8-builtins = "^1.5.3"
flake8-class-attributes-order = "^0.1.3"
flake8-codes = "^0.2.2"
flake8-cognitive-complexity = "^0.1.0"
flake8-comments = "^0.1.2"
flake8-comprehensions = "^3.10.0"
flake8-datetime-import = "^0.1.0"
flake8-docstrings = "^1.6.0"
flake8-executable = "^2.1.2"
flake8-functions = "^0.0.7"
flake8-functions-names = "^0.3.0"
flake8-isort = "^4.2.0"
flake8-json = "^21.7.0"
flake8-keyword-arguments = "^0.1.0"
flake8-pie = "^0.16.0"
flake8-pytest = "^1.4"
flake8-pytest-style = "^1.6.0"
flake8-quotes = "^3.3.1"
flake8-return = "^1.1.3"
flake8-rst-docstrings = "^0.2.7"
flake8-secure-coding-standard = "^1.3.0"
flake8-simplify = "^0.19.3"
flake8-spellcheck = "^0.28.0"
flake8-string-format = "^0.3.0"
flake8-todos = "^0.1.5"
flake8-unused-arguments = "^0.0.11"
flake8-use-fstring = "^1.4"
flake8-variables-names = "^0.0.5"
furo = "^2022.9.29"
isort = "^5.10.1"
jupyterlab = "^3.4.8"
mypy = "^0.982"
myst-parser = "^0.18.1"
pandas-vet = "^0.2.3"
pep8 = "^1.7.1"
pep8-naming = "^0.13.2"
pre-commit = "^2.20.0"
pre-commit-hooks = ">=4.1.0"
pylint = "^2.15.5"
pyproject-flake8 = "^5.0.4.post1"
pyre-check = "^0.9.16"
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-datadir = "^1.3.1"
pytest-mock = "^3.10.0"
pytest-monkeytype = "^1.1.0"
pytest-picked = "^0.4.6"
pytest-structlog = "^0.5"
pytest-sugar = "^0.9.5"
pyupgrade = ">=2.29.1"
reorder-python-imports = "^3.9.0"
requests-file = "^1.5.1"
setuptools = "^65.4.1"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
tox = "^3.26.0"
typeguard = "^2.13.3"
wget = "^3.2"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}


[tool.poetry.group.dev.dependencies]
pytest-mypy = "^0.10.0"

[virtualenvs]
in-project = true

# [tool.poetry.scripts]
# fact-check-okinawa-vote-cheating = "fact_check_okinawa_vote_cheating.__main__:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
# pythonpath = 'src'
pythonpath = [".", "src"]
filterwarnings = ["ignore::DeprecationWarning",]
addopts = [
  "-v",
  "--strict-config",
  "--strict-markers",
  "--picked",
  "--cov=src",
  "--cov-branch",
  "--no-cov-on-fail",
  ]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["fact_check_okinawa_vote_cheating", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 88

disable = [
  "missing-docstring",
  "unused-argument",
  "no-value-for-parameter",
  "no-member",
  "no-name-in-module",
  "no-else-return",
  "line-too-long",
  "fixme",
  "protected-access",
  "too-few-public-methods",
]

[tool.mypy]
strict = true
strict_optional = true
warn_unreachable = true
warn_unused_ignores = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
check_untyped_defs = true
disallow-untyped-calls = true
disallow-untyped-defs = true

[tool.flake8]
accept-encodings = "utf-8"
docstring-convention = "google"
docstring_style = "google"
enable-extensions="G"
ignore = ["ABS101","I001","I005","Q000","S109","SC100","SC200","SCS108", "W503"]
inline-quotes = "double"
max-complexity = 10
max-line-length = 88
multiline-quotes = "'''"
per-file-ignores = "tests/*:S101"
rst-directives = "deprecated"
rst-roles = "class,const,func,meth,mod,ref"
use_class_attributes_order_strict_mode = true

[tool.pydocstyle]
convention = "google"
# add_select = ["D204", "D400", "D401", "D404", "D413"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
